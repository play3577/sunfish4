/* ZobristCodeGenerator.cpp
 *
 * Kubo Ryosuke
 */

#include "dev/code_generator/ZobristCodeGenerator.hpp"
#include "common/math/Random.hpp"
#include "core/base/Square.hpp"
#include "core/base/Piece.hpp"

namespace {

using namespace sunfish;

void generateZobristOnBoard(Random& random, std::ostream& os) {
  os << "const Zobrist::Type Zobrist::Board[Square::N][PieceNumber::Num] = {\n";
  SQUARE_EACH(square) {
    os << "  {\n";
    for (PieceRawType piece = PieceNumber::Begin; piece != PieceNumber::End; piece++) {
      os << "    0x" << std::hex << random.getInt64() << "ll,\n";
    }
    os << "  },\n";
  }
  os << "};\n";
}

void generateZobristOnHand(Random& random, const char* pieceName, int num, std::ostream& os) {
  os << "const Zobrist::Type Zobrist::Hand" << pieceName << "[" << std::dec << num << "] = {\n";
  for (int i = 0; i < num; i++) {
    os << "  0x" << std::hex << random.getInt64() << "ll,\n";
  }
  os << "};\n";
}

void generateZobristBlack(Random& random, std::ostream& os) {
  os << "const Zobrist::Type Zobrist::Black = 0x" << std::hex << random.getInt64() << "ll;\n";
}

} // namespace

namespace sunfish {

bool ZobristCodeGenerator::generateIntoStream(std::ostream& os) {
  os << "/* Zobrist.cpp \n";
  os << " * \n";
  os << " * generated by ZobristCodeGenerator\n";
  os << " */\n";
  os << "\n";
  os << "#include \"core/position/Zobrist.hpp\"";
  os << "\n";
  os << "namespace sunfish {\n";
  os << "\n";

  Random random;

  generateZobristOnBoard(random, os);

  os << "\n";

  generateZobristOnHand(random, "BPawn", 18, os);
  generateZobristOnHand(random, "BLance", 4, os);
  generateZobristOnHand(random, "BKnight", 4, os);
  generateZobristOnHand(random, "BSilver", 4, os);
  generateZobristOnHand(random, "BGold", 4, os);
  generateZobristOnHand(random, "BBishop", 2, os);
  generateZobristOnHand(random, "BRook", 2, os);

  generateZobristOnHand(random, "WPawn", 18, os);
  generateZobristOnHand(random, "WLance", 4, os);
  generateZobristOnHand(random, "WKnight", 4, os);
  generateZobristOnHand(random, "WSilver", 4, os);
  generateZobristOnHand(random, "WGold", 4, os);
  generateZobristOnHand(random, "WBishop", 2, os);
  generateZobristOnHand(random, "WRook", 2, os);

  generateZobristBlack(random, os);

  os << "\n";
  os << "} // namespace sunfish\n";

  return true;
}

} // namespace sunfish
